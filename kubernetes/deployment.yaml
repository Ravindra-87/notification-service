apiVersion: apps/v1
kind: Deployment
metadata:
  name:  notification
  namespace: dn
spec:
  replicas: 1
  selector:
    matchLabels:
      app: notification
  template:
    metadata:
      labels:
        app: notification
    spec:
      # Use the Kubernetes Service Account (KSA)with Workload Identity
      serviceAccountName: ksa  # Ensure this matches your KSA name
      containers:
        # Spring Boot application container
        - name: notification-service-project
          image: asia-south1-docker.pkg.dev/multi-micro-project/mutli-micro-repo/notification-service-project:tag_version
          imagePullPolicy: Always
          ports:
            - containerPort: 8083
          env:
            - name: DB_HOST
              value: "127.0.0.1"  # Cloud SQL Proxy will listen on localhost
            - name: DB_PORT
              value: "3306"  # MySQL default port
            - name: INSTANCE_CONNECTION_NAME
              value: multi-micro-project:us-central1:multi-micro-db
            - name: DB_NAME
              value: "product-data" # Your database name in Cloud SQL
            - name: DB_USER
              value: "ravi"  #Your database user in Cloud SQL
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                 name: secret-db-password
                 key: secret-db-password-key
            - name: TEXTBELT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: twilio-secret
                  key: TEXTBELT_API_KEY
            - name: RECEIVERS_GROUP_NUMBERS
              valueFrom:
                secretKeyRef:
                  name: twilio-secret
                  key: RECEIVERS_GROUP_NUMBERS
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"  # enables auto topic creation on message publish

            - name: KAFKA_NUM_PARTITIONS
              value: "3"  # default partitions for newly auto-created topics